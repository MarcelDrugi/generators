{% extends 'base.html.twig' %}

{% block title %}Hello HomepageController!{% endblock %}

{% block body %}

    <div class="container" style="margin-bottom: 70px">
        <h5>
            Zadanie rekrutacyjne na stanowisko Junior Backend Developer wykonane dla GOGOMEDIA. <br /><br />
            Informacje o autorze:<br />
            Piotr Mazur <br />
            piotr.a.mazur@wp.pl <br />
            repozytorium z kodem: <a href="https://github.com/MarcelDrugi/generators"> https://github.com/MarcelDrugi/generators </a> <br /><br />
        </h5>
    </div>
    <div class="row">
        <div class="col" style="width: 100%; background-color: AliceBlue; margin-left: 5px">
            <h2>Raporty:</h2>
            <div style="margin-bottom: 40px;">
                Do wygenerowania raportów dla wszystkich generatorów z losowymi wartościami za rok 2019  służy komenda:<br />
                <code>php bin/console app:seedData</code> <br /><br />
                Raport dla bieżącej chwili (godzinowe średnie dla ostatnich 24h) dla wszystkich generatorów można wygenerować komendą:<br />
                <code>php bin/console app:dailyReport</code> <br />
                (wymaga wcześniejszego wprowadzenia jakichś logów, w przypadku braku logów, średnia moc w raporcie wyniesie 0)
            </div>
            <h2>Wyświetl raporty z podanego okresu:</h2>
            <div style="font-size: 18px; margin-bottom: 30px;"> 
                Daty należy wprowadzić w  formacie: <br />
                <b>'YYYY-mm-dd hh:ii:ss'</b> np. <b>2022-01-07 12:00:00</b>
            </div>
            {% if wrongDataFormat == true %}
                <div class="alert alert-danger" role="alert">
                    <b>Niepoprawne dane!</b> <br />
                    Popraw formatowanie dat.
                </div>
            {% endif %}
            {% if internalError == true %}
                <div class="alert alert-danger" role="alert">
                    <b>Błąd serwera. Przepraszamy.</b>
                </div>
            {% endif %}
            {% if logs is empty and app.request.method == 'POST' %}
                <div class="alert alert-warning" role="alert">
                    Brak wyników dla podanych kryteriów.
                </div>
            {% endif %}
            <div>
                {{ form_start(form) }}
                    <div class="row">
                        <div class="col-3">
                            {{ form_label(form.generatorId, 'nr generatora') }} {{ form_widget(form.generatorId) }}
                        </div>
                        <div class="col-3">
                            {{ form_label(form.from, 'od') }} {{ form_widget(form.from) }}
                        </div>
                        <div class="col-3">
                            {{ form_label(form.to, 'do') }} {{ form_widget(form.to) }}
                        </div>
                        <div class="col-3">
                            <input type="submit" id="confirm" class="btn btn-primary btn-sm"/>
                        </div>
                    </div>
                    {% if logs %}
                        <nav aria-label="Page navigation example">
                            <div class="pagination justify-content-center" style="margin-top: 25px;">
                                {% if page == 1 %} <button style="color: black" type="button" class="page-link" onclick="document.getElementById('form_hiddenPageNumber').value = 1; document.getElementById('confirm').click()" >1</button> {% else %} <button type="button" class="page-link" onclick="document.getElementById('form_hiddenPageNumber').value = 1; document.getElementById('confirm').click()" >1</button> {% endif %}
                                {% if page - 1 > 1 %}<button type="button" class="page-link" disabled>...</button><button type="button" class="page-link" onclick="document.getElementById('form_hiddenPageNumber').value = {{ page - 1 }}; document.getElementById('confirm').click()">{{ page - 1 }}</button> {% endif %}
                                {% if page != 1 and page != countQuery %}<button style="color: black" type="button" class="page-link" onclick="document.getElementById('form_hiddenPageNumber').value = {{ page }}; document.getElementById('confirm').click()">{{ page }}</button>{% endif %}
                                {% if page + 1 < countQuery %}<button type="button" class="page-link" onclick="document.getElementById('form_hiddenPageNumber').value = {{ page + 1 }}; document.getElementById('confirm').click()">{{ page + 1 }}</button><button type="button" class="page-link" disabled>...</button> {% endif %}
                                {% if page == countQuery and countQuery > 1 %} <button style="color: black" type="button" class="page-link" onclick="document.getElementById('form_hiddenPageNumber').value = {{ countQuery }}; document.getElementById('confirm').click()">{{countQuery}}</button> {% elseif countQuery > 1%} <button type="button" class="page-link" onclick="document.getElementById('form_hiddenPageNumber').value = {{ countQuery }}; document.getElementById('confirm').click()">{{countQuery}}</button> {% endif %}
                            </div>
                        </nav>
                    {% endif %}
                {{ form_end(form) }}
                <table class="table table-striped ">
                    <thead class="thead-dark">
                        <tr>
                            <th>ID RAPORTU</th>
                            <th>ID GENERATORA</th>
                            <th>RAPORT Z GODZINY</th>
                            <th>ŚREDNIA MOC [MW]</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for log in logs %}
                            <tr>
                                <td>{{ log.id }}</td>
                                <td>{{ log.generatorId }}</td>
                                <td>{{ log.datetime|date('Y-m-d H:i:s') }}</td>
                                <td>{{ log.averagePowerMw}}</td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col">
            <div style="margin-left:10%; margin-right: 5px">
                <h2>API:</h2>
                <div>
                    Do wprowadzania/pobierania logowań mocy generatorów służą poniższe endpointy:<br />
                    <table class="table table-bordered">
                        <thead class="thead-dark">
                            <tr>
                                <th>URL</th>
                                <th>METODA</th>
                                <th>PARAMETRY</th>
                                <th>PRZYKŁADOWE BODY REQUEST</th>
                                <th>OPIS</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>http://127.0.0.1:8005/api/post</td>
                                <td>POST</td>
                                <td></td>
                                <td><code>{"generatorId": 7, "powerKw": 492, "time": 1641688135028017}</code></td>
                                <td>Zapisywanie mocy w [KW] dla generatora o ID z zakresu (1-20) w czasie podanym jako 16-sto cyfrowy timestamp </td>
                            </tr>
                            <tr>
                                <td>http://127.0.0.1:8005/api/get</td>
                                <td>GET</td>
                                <td><b>generatorId</b> - nr generatora(int) <br /> <b>from</b> - data od (timestamp 16-sto cyfrowy) <br /> <b>to</b> - data do (timestamp 16-sto cyfrowy)</td>
                                <td></td>
                                <td>Zwaraca zalogowane pomiary mocy generatora. ID generatora oraz zakres dat przekwzywane jako argumenty w URL.</td>
                            </tr>
                        </tbody>
                    </table>
                    Nie tworzyłem całego CRUD-a, bo ze względu na logikę API edycja czy usunięcie pojedynczego wpisu nie bardzo ma sens.<br />
                    Nie uwzględniłem także wprowadzania wielu logowań jednym requestem, bo jak zrozumiałem zapis odbywa się wyłącznie "na bieążąco". 
                </div>
            </div>
        </div>
    </div>

{% endblock %}
